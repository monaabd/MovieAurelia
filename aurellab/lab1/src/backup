export class Edit {
  isNew = false;
  constructor(movieData, router, validation) {
    //movieData hamon modelview ke doroskardim va inject kardim
    this.data = movieData;
    this.router = router;
    this.validation = validation.on(this)
         .ensure('movie.title')
            .isNotEmty()
            .hasMinLength(3)
            .hasMaxLength(100)
         .ensure('movie.releaseYear')
             .isNumber()
             .isBetween(1900, 2100);
  }
  async activate(param) {
    //in param inja dadei ke ma midim harchi esmesh mitone
    //bashe va ba on params ke to html be name params bara route fargh dare on hatman
    //bayad params bashe chon parametrike lazeme va ma hamishe id midim
    if (!param || !param.id) {
      this.isNew = true;
      this.movie = new MovieModel();
      this.validation.validation();
    } else {
      let movieJSON = await this.data.getById(param.id);
      this.movie = new MovieModel(movieJSON);
      this.validation.validation();
    }
  }
  get header() {
    return this.isNew ? 'Creating: ' : 'Editing: ';
  }

  async saveEdit() {
    if (this.isNew) {
      //skapa new
      //send the movie to the server when the validation is ok
      await this.validation.validate().then(() => {
        this.data.save(this.movie.getEntity());
      });
    } else {
      //updatera
      await this.validation.validate().then(() => {
        this.data.update(this.movie.getEntity(), this.movie.id);
      });
    }

    this.router.navigateToRoute('list');
  }
}
